@using Blazored.SessionStorage

@inject NavigationManager _navigationManager
@inject ISessionStorageService sessionStorage

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">chattr</a>

    <button class="btn btn-secondary" @onclick="Logout">wyloguj</button>

    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        string url = $"{_navigationManager.BaseUri}api/user/logout";

        HttpClient client = new();
        using var response = await client.PostAsJsonAsync<object>(url, null);
;
        if (response.IsSuccessStatusCode) 
        {
            await sessionStorage.RemoveItemAsync("API_TOKEN");
            await sessionStorage.RemoveItemAsync("CURRENT_USER");
            _navigationManager.NavigateTo("/login");
        }
    }
}
